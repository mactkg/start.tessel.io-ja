extends ja-layout

block content
  .row
    .large-12.columns.fre-container
      .large-4.columns.right
        img(style="margin-top:-30px; max-width=253px; float: right;" src='#{s3url}tessel-plugged.jpg')
      .large-8.columns
        .row
          h1 こんにちは、（現実）世界！
          p
          p コマンドライン上でTesselのプログラムを保存するためのフォルダーを作り、そのフォルダー内に移動し、フォルダー内の<a href="https://www.npmjs.org/">npm</a>を初期化します。
          code
            cli mkdir tessel-code
            cli cd tessel-code
            cli npm init
          p 全てのオプションで何も打ちこまずにenterキーを押すとnpmはデフォルトに設定されます。
          p おつかれさまでした！Tesselを動かすための準備はこれでおしまいです。
        .row
          .greyBar(style="height:2px;")
        .row
          p LEDを点滅させることがハードウェアにおける「Hello World」です。
          p  「tessel-code」フォルダの中に「blinky.js」を作り、その中に以下の内容をコピー＆ペーストしてください。

          pre.prettyprint
            code.
              // ハードウェアのTesselのためのインターフェースを代入します。
              var tessel = require('tessel');

              // LEDピンの初期状態をアウトプットに設定します。
              // Truthy initial state sets the pin high
              // 真の初期状態はピンをHighに設定します。
              // 偽はLowに設定します。
              var led1 = tessel.led[0].output(1);
              var led2 = tessel.led[1].output(0);

              setInterval(function () {
                  console.log("I'm blinking! (Press CTRL + C to stop)");
                  // LEDが交互に点灯します。
                  led1.toggle();
                  led2.toggle();
              }, 100);
          p

          p コマンドラインに以下のように書き込んで、enterを押してください。

          p.bigCode <code><cli>tessel run blinky.js</cli></code>

          p プログラムがTesselのRAMメモリ上で実行されます。
          
          p <b>Tesselを見てください!</b> 青と緑のLEDが交互に点灯していますね。

          p <b>おまけ</b>：2つのLEDが同時に点滅するように、プログラムを書き換えてみましょう。

block bottom_nav
  .row
    .large-6.columns.left
      a.bottomButton(href="/ja/install" class="button") 戻る：インストール
    .large-6.columns.right
      a.bottomButton.right(href="/ja/modules" class="button") 進む：モジュール
